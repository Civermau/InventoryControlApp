@page
@using Microsoft.EntityFrameworkCore
@using Microsoft.EntityFrameworkCore.ChangeTracking
@addTagHelper *,Microsoft.AspNetCore.Mvc.TagHelpers
@using AlmacenSQLiteEntities;
@using AlmacenDataContext;
@functions{
    private Almacen db = new();

    [BindProperty]
    public Usuario? usuario { get; set; }

    [BindProperty]
    public int UserId { get; set; }

    public void OnGet(int id){
        Usuario usuario = db.Usuarios!.FirstOrDefault(u => u.UsuarioId == id);
        UserId = usuario.UsuarioId;
        ViewData["Title"] = "";
    } 

    public IActionResult OnPost(){
        int registroId = int.Parse(Request.Form["UserId"]);
        if (!ModelState.IsValid){
            Usuario Upusuario = db.Usuarios!.FirstOrDefault(u => u.UsuarioId == registroId);
            Upusuario.Password = usuario.Password;
            db.SaveChanges();
            return RedirectToPage("/index");
        }
        return Page();
    }
    public IActionResult OnPostIndex()
    {
        if (!ModelState.IsValid)
        {
            return RedirectToPage("/index");
        }
        return Page();
    }
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/styles.css">
    <script src="~/script.js" defer></script>
    <title>Usuarios</title>
</head>
<body>
    <div class="titles">
        <h1>Nueva contraseña</h1>
    </div>
    <div id="signinFormContainer" class="form-container">
        <br>
        <p onclick="toggleForm('signinForm')">Nueva contraseña</p>
        <div class="in-database">
            <div id="signinForm" class="form">
                <form method="POST">
                    <div class="fields-table">
                        <input asp-for="usuario.Password" placeholder="Contraseña" type="password" id="passwordInput" required>
                        <span asp-validation-for="usuario.Password" class="text-danger"></span>
                        <input type="hidden" name="UserId" value="@Model.UserId"/>
                        @{
                            if(Model.usuario is not null){
                                int validationPassword = UI.PasswordValidation(Model.usuario.Password);
                                switch (validationPassword)
                                {
                                    case 10:
                                        <span class="text-danger">La contraseña es muy corta. Debe tener al menos 8 caracteres.</span>
                                        break;
                                    case 20:
                                        <span class="text-danger">La contraseña debe contener al menos un caracter en mayusculas.</span>
                                        break;
                                    case 30:
                                        <span class="text-danger">La contraseña debe contener al menos un caracter numerico.</span>
                                        break;
                                    case 40:
                                        <span class="text-danger">La contraseña debe contener al menos un caracter especial no alfanumérico.</span>
                                    break;
                                    case 50:
                                        <span class="text-danger">La contraseña debe contener al menos un caracter en minúsculas.</span>
                                        break;
                                    case 80:
                                        <span class="text-danger">La contraseña es muy común o fácil de adivinar.</span>
                                        break;
                                    case 90:
                                        <span class="text-danger">La contraseña debe contener al menos un caracter no alfanumérico.</span>
                                        break;
                                    case 100:
                                        <span class="text-danger">La contraseña debe contener una combinación de mayúsculas y minúsculas.</span>
                                        break;
                                    case 01:
                                        // No hay error, proceder con la lógica normal
                                        break;
                                }
                            }
                        }
                        <input id="enviar" type="submit" />
                    </div>
                </form>
            </div>
        </div>
    </div>
    <form method="POST" asp-page-handler="Index">
        <div class="fields-table">
            <input type="submit" value="Inicio"/>
        </div>
    </form>
</body>
</html>